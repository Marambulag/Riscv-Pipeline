$date
	Sun Jun 15 21:15:35 2025
$end
$version
	Questa Intel Starter FPGA Edition Version 2024.3
$end
$timescale
	1ps
$end

$scope module data_memory_tb $end
$var reg 1 ! clk $end
$var reg 32 " addr [31:0] $end
$var reg 32 # write_data [31:0] $end
$var reg 2 $ mem_write [1:0] $end
$var reg 1 % mem_read $end
$var wire 1 & read_data [31] $end
$var wire 1 ' read_data [30] $end
$var wire 1 ( read_data [29] $end
$var wire 1 ) read_data [28] $end
$var wire 1 * read_data [27] $end
$var wire 1 + read_data [26] $end
$var wire 1 , read_data [25] $end
$var wire 1 - read_data [24] $end
$var wire 1 . read_data [23] $end
$var wire 1 / read_data [22] $end
$var wire 1 0 read_data [21] $end
$var wire 1 1 read_data [20] $end
$var wire 1 2 read_data [19] $end
$var wire 1 3 read_data [18] $end
$var wire 1 4 read_data [17] $end
$var wire 1 5 read_data [16] $end
$var wire 1 6 read_data [15] $end
$var wire 1 7 read_data [14] $end
$var wire 1 8 read_data [13] $end
$var wire 1 9 read_data [12] $end
$var wire 1 : read_data [11] $end
$var wire 1 ; read_data [10] $end
$var wire 1 < read_data [9] $end
$var wire 1 = read_data [8] $end
$var wire 1 > read_data [7] $end
$var wire 1 ? read_data [6] $end
$var wire 1 @ read_data [5] $end
$var wire 1 A read_data [4] $end
$var wire 1 B read_data [3] $end
$var wire 1 C read_data [2] $end
$var wire 1 D read_data [1] $end
$var wire 1 E read_data [0] $end

$scope module uut $end
$var wire 1 F clk $end
$var wire 1 G addr [31] $end
$var wire 1 H addr [30] $end
$var wire 1 I addr [29] $end
$var wire 1 J addr [28] $end
$var wire 1 K addr [27] $end
$var wire 1 L addr [26] $end
$var wire 1 M addr [25] $end
$var wire 1 N addr [24] $end
$var wire 1 O addr [23] $end
$var wire 1 P addr [22] $end
$var wire 1 Q addr [21] $end
$var wire 1 R addr [20] $end
$var wire 1 S addr [19] $end
$var wire 1 T addr [18] $end
$var wire 1 U addr [17] $end
$var wire 1 V addr [16] $end
$var wire 1 W addr [15] $end
$var wire 1 X addr [14] $end
$var wire 1 Y addr [13] $end
$var wire 1 Z addr [12] $end
$var wire 1 [ addr [11] $end
$var wire 1 \ addr [10] $end
$var wire 1 ] addr [9] $end
$var wire 1 ^ addr [8] $end
$var wire 1 _ addr [7] $end
$var wire 1 ` addr [6] $end
$var wire 1 a addr [5] $end
$var wire 1 b addr [4] $end
$var wire 1 c addr [3] $end
$var wire 1 d addr [2] $end
$var wire 1 e addr [1] $end
$var wire 1 f addr [0] $end
$var wire 1 g write_data [31] $end
$var wire 1 h write_data [30] $end
$var wire 1 i write_data [29] $end
$var wire 1 j write_data [28] $end
$var wire 1 k write_data [27] $end
$var wire 1 l write_data [26] $end
$var wire 1 m write_data [25] $end
$var wire 1 n write_data [24] $end
$var wire 1 o write_data [23] $end
$var wire 1 p write_data [22] $end
$var wire 1 q write_data [21] $end
$var wire 1 r write_data [20] $end
$var wire 1 s write_data [19] $end
$var wire 1 t write_data [18] $end
$var wire 1 u write_data [17] $end
$var wire 1 v write_data [16] $end
$var wire 1 w write_data [15] $end
$var wire 1 x write_data [14] $end
$var wire 1 y write_data [13] $end
$var wire 1 z write_data [12] $end
$var wire 1 { write_data [11] $end
$var wire 1 | write_data [10] $end
$var wire 1 } write_data [9] $end
$var wire 1 ~ write_data [8] $end
$var wire 1 !! write_data [7] $end
$var wire 1 "! write_data [6] $end
$var wire 1 #! write_data [5] $end
$var wire 1 $! write_data [4] $end
$var wire 1 %! write_data [3] $end
$var wire 1 &! write_data [2] $end
$var wire 1 '! write_data [1] $end
$var wire 1 (! write_data [0] $end
$var wire 1 )! mem_write [1] $end
$var wire 1 *! mem_write [0] $end
$var wire 1 +! mem_read $end
$var reg 32 ,! read_data [31:0] $end
$var integer 32 -! i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
b0 "
b0 #
b0 $
0%
b0 ,!
b100000000 -!
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
$end
#5000
1!
1F
#10000
b11011110101011011011111011101111 #
b11 $
0!
1*!
1)!
1(!
1'!
1&!
1%!
1#!
1"!
1!!
1}
1|
1{
1z
1y
1w
1v
1t
1s
1q
1o
1m
1l
1k
1j
1h
1g
0F
#15000
1!
1F
#20000
b0 $
1%
0!
0*!
0)!
1+!
0F
b11011110101011011011111011101111 ,!
1E
1D
1C
1B
1@
1?
1>
1<
1;
1:
19
18
16
15
13
12
10
1.
1,
1+
1*
1)
1'
1&
#25000
1!
1F
#30000
b100 "
b10101010 #
b1 $
0%
0!
1*!
0(!
0&!
0"!
0}
0|
0{
0z
0y
0w
0v
0t
0s
0q
0o
0m
0l
0k
0j
0h
0g
1d
0+!
0F
b0 ,!
0E
0D
0C
0B
0@
0?
0>
0<
0;
0:
09
08
06
05
03
02
00
0.
0,
0+
0*
0)
0'
0&
#35000
1!
1F
#40000
b0 $
1%
0!
0*!
1+!
0F
b10101010 ,!
1D
1B
1@
1>
#45000
1!
1F
#50000
b1000 "
b1011111011101111 #
b10 $
0%
0!
1)!
1(!
1&!
1"!
1}
1|
1{
1z
1y
1w
0d
1c
0+!
0F
b0 ,!
0D
0B
0@
0>
#55000
1!
1F
#60000
b0 $
1%
0!
0)!
1+!
0F
b1011111011101111 ,!
1E
1D
1C
1B
1@
1?
1>
1<
1;
1:
19
18
16
#65000
1!
1F
#70000
b1100 "
b11001010111111101011101010111110 #
b11 $
0%
0!
1*!
1)!
0(!
1$!
0"!
0|
1u
1t
1s
1r
1q
1p
1o
1m
1k
1h
1g
1d
0+!
0F
b0 ,!
0E
0D
0C
0B
0@
0?
0>
0<
0;
0:
09
08
06
#75000
1!
1F
#80000
b0 $
1%
0!
0*!
0)!
1+!
0F
b11001010111111101011101010111110 ,!
1D
1C
1B
1A
1@
1>
1<
1:
19
18
16
14
13
12
11
10
1/
1.
1,
1*
1'
1&
#85000
1!
1F
#90000
b10000 "
0!
0d
0c
1b
0F
b0 ,!
0D
0C
0B
0A
0@
0>
0<
0:
09
08
06
04
03
02
01
00
0/
0.
0,
0*
0'
0&
#95000
1!
1F
